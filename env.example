# 功能说明: MAESTRO 环境变量配置示例。复制此文件为 `.env` 并根据需要修改配置值。

# MAESTRO 环境变量配置
# 将此文件复制到 .env 并根据需要修改值

# =============================================================================
# 网络配置
# =============================================================================

# 后端配置
BACKEND_HOST=127.0.0.1
BACKEND_PORT=8000
BACKEND_INTERNAL_PORT=8000

# 前端配置
FRONTEND_HOST=127.0.0.1
FRONTEND_PORT=3000
FRONTEND_INTERNAL_PORT=3000

# API 协议配置
API_PROTOCOL=http
WS_PROTOCOL=ws

# =============================================================================
# 时区和本地化
# =============================================================================

# 系统时区 (所有服务使用)
TZ=America/Chicago

# 前端时区显示
VITE_SERVER_TIMEZONE=America/Chicago

# =============================================================================
# 日志和调试
# =============================================================================

# 所有服务的日志级别 (debug, info, warning, error)
LOG_LEVEL=info

# Python 特定日志
TRANSFORMERS_VERBOSITY=error
TOKENIZERS_PARALLELISM=false
TF_CPP_MIN_LOG_LEVEL=2
PYTHONWARNINGS=ignore

# =============================================================================
# 性能和资源配置
# =============================================================================

# 后端处理的最大工作线程数
MAX_WORKER_THREADS=4

# =============================================================================
# GPU 配置 (可选 - 适用于 NVIDIA GPU)
# =============================================================================

# 不同服务的 GPU 设备 ID
# 设置为 'all' 使用所有可用的 GPU，或指定设备 ID，如 '0', '1' 等。
# 留空或设置为 '' 禁用该服务的 GPU 支持

# 后端服务 GPU 设备
BACKEND_GPU_DEVICE=

# 文档处理器服务 GPU 设备
DOC_PROCESSOR_GPU_DEVICE=

# CLI 服务 GPU 设备
CLI_GPU_DEVICE=

# =============================================================================
# 本地 LLM 配置 (可选)
# =============================================================================

# 如果使用本地 LLM (例如 Ollama)，请取消注释并配置
# LOCAL_LLM_HOST=127.0.0.1
# LOCAL_LLM_PORT=11434
# LOCAL_LLM_INTERNAL_PORT=11434

# =============================================================================
# 开发和测试
# =============================================================================

# 启用开发模式功能
# 开发环境设置为 'true'，生产环境设置为 'false'
DEV_MODE=true

# =============================================================================
# 安全和认证
# =============================================================================

# JWT 密钥 (为生产环境生成一个安全的随机字符串)
# 您可以使用以下命令生成: openssl rand -hex 32
JWT_SECRET=your-secret-key-here-change-in-production

# 会话超时时间 (秒) (默认: 24 小时)
SESSION_TIMEOUT=86400

# =============================================================================
# 数据库配置
# =============================================================================

# 数据库 URL (默认使用 SQLite)
DATABASE_URL=sqlite:///./maestro.db

# =============================================================================
# 外部 API 密钥 (可选)
# =============================================================================

# OpenAI API 密钥 (如果使用 OpenAI 模型)
# OPENAI_API_KEY=your-openai-api-key-here

# Anthropic API 密钥 (如果使用 Claude 模型)
# ANTHROPIC_API_KEY=your-anthropic-api-key-here

# Google API 密钥 (如果使用 Google 服务)
# GOOGLE_API_KEY=your-google-api-key-here

# =============================================================================
# 文件存储和缓存
# =============================================================================

# 模型缓存目录 (相对于项目根目录)
MODEL_CACHE_DIR=./maestro_model_cache

# 数据缓存目录 (相对于项目根目录)
DATA_CACHE_DIR=./maestro_datalab_cache

# 报告目录 (相对于项目根目录)
REPORTS_DIR=./reports

# PDF 上传目录 (相对于项目根目录)
PDF_DIR=./pdfs

# =============================================================================
# Webhooks 和集成 (可选)
# =============================================================================

# 通知 Webhook URL (可选)
# WEBHOOK_URL=https://your-webhook-url.com/notifications

# Slack Webhook URL (可选)
# SLACK_WEBHOOK_URL=https://hooks.slack.com/services/YOUR/SLACK/WEBHOOK

# =============================================================================
# 监控和分析 (可选)
# =============================================================================

# 启用使用情况分析 (true/false)
ENABLE_ANALYTICS=false

# 分析端点 (如果使用外部分析服务)
# ANALYTICS_ENDPOINT=https://your-analytics-service.com/collect

# =============================================================================
# 备份和恢复
# =============================================================================

# 启用自动备份 (true/false)
AUTO_BACKUP=false

# 备份计划 (cron 格式，例如，"0 2 * * *" 表示每天凌晨 2 点)
BACKUP_SCHEDULE="0 2 * * *"

# 备份保留天数
BACKUP_RETENTION_DAYS=30

# =============================================================================
# 注意和注释
# =============================================================================

# 此文件包含 MAESTRO 所有可配置的环境变量
#
# 使用此文件:
# 1. 将此文件复制到 .env: cp env.example .env
# 2. 编辑 .env 文件并使用您的特定值
# 3. 运行设置脚本: ./setup-env.sh (Linux/Mac) 或 setup-env.bat (Windows)
#
# 对于 Windows 用户:
# - 使用 setup-env.bat 兼容批处理文件
# - 使用 setup-env.ps1 兼容 PowerShell
# - 使用 maestro-cli.bat 进行批处理文件 CLI 操作
# - 使用 maestro-cli.ps1 进行 PowerShell CLI 操作
#
# GPU 配置注意事项:
# - 设置 GPU 设备 ID 以启用 GPU 加速
# - 使用 'all' 使用所有可用 GPU
# - 使用特定设备 ID，如 '0', '1' 表示特定 GPU
# - 留空以禁用 GPU 支持
# - Docker GPU 支持需要 NVIDIA Container Toolkit
#
# 安全注意事项:
# - 在生产环境中更改 JWT_SECRET
# - 在生产环境中使用 HTTPS/WSS
# - 确保 API 密钥安全，切勿将其提交到版本控制